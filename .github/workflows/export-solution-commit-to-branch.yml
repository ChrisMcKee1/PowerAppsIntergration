name: export-solution-commit-to-branch
# export-solution-commit-to-branch:
# export the solution, unpack the solution then commit it into version control
# Useful trigger types [workflow_call, workflow_dispatch]
on:
  workflow_dispatch:
    inputs:
      # Change this value
      solution_name:
        description: 'name of the solution to worked on from Power Platform'
        required: false
        default: Demo
        type: string
      #Do Not change these values
      solution_exported_folder:
        description: 'folder name for staging the exported solution *do not change*'
        required: false
        default: out/exported/
        type: string
      solution_outbound_folder:
        description: 'staging the unpacked solution folder before check-in *do not change*'
        required: false
        default: out/solutions/
        type: string
      solution_target_folder: 
       description: 'folder name to be created and checked in *do not change*'
       required: false
       default: solutions/
       type: string
      branch_name:
       description: 'repo branch name*'
       required: false
       default: development
       type: string

env:
#edit your values here
  BUILD_ENVIRONMENT_URL: ${{ secrets.NONPROD_URL }}
  PRODUCTION_ENVIRONMENT_URL: ${{ secrets.PROD_URL }}
  CLIENT_ID: ${{ secrets.APPLICATION_ID }}
  TENANT_ID: ${{ secrets.TENANT_ID }}
  CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}

jobs:
  export-unpack-and-commit-solution:
    runs-on: windows-latest
    env:
      RUNNER_DEBUG: 1

    steps:
    - uses: actions/checkout@v2
      with:
        lfs: true
        
    - name: who-am-i action
      uses: microsoft/powerplatform-actions/who-am-i@0.4.0
      with:
        environment-url: ${{ env.BUILD_ENVIRONMENT_URL }}
        app-id: ${{env.CLIENT_ID}}
        client-secret: ${{ env.CLIENT_SECRET }}
        tenant-id: ${{ env.TENANT_ID }}
    
    - name: Export solution as unmanaged
      uses: microsoft/powerplatform-actions/export-solution@0.4.0
      with:
        environment-url: ${{env.BUILD_ENVIRONMENT_URL}}
        app-id: ${{env.CLIENT_ID}}
        client-secret: ${{ env.CLIENT_SECRET}}
        tenant-id: ${{env.TENANT_ID}}
        solution-name: ${{ github.event.inputs.solution_name}}
        managed: false
        solution-output-file: ${{ github.event.inputs.solution_exported_folder}}/${{ github.event.inputs.solution_name}}.zip

    - name: unpack-solution action
      uses: microsoft/powerplatform-actions/unpack-solution@0.4.0
      with:
        solution-file: ${{ github.event.inputs.solution_exported_folder}}/${{ github.event.inputs.solution_name}}.zip
        solution-folder: ${{ github.event.inputs.solution_outbound_folder}}/${{ github.event.inputs.solution_name }}
        solution-type: 'Unmanaged'
        overwrite-files: true

    - name: branch-solution, prepare it for a PullRequest
      uses: microsoft/powerplatform-actions/branch-solution@0.4.0
      with:
        solution-folder: ${{ github.event.inputs.solution_outbound_folder}}/${{ github.event.inputs.solution_name }}
        solution-target-folder: ${{ github.event.inputs.solution_target_folder}}/${{ github.event.inputs.solution_name}}
        repo-token: ${{ secrets.GITHUB_TOKEN }}
        allow-empty-commit: true
        branch-name: ${{ github.event.inputs.branch_name}}
